filter(before_h=="1h") %>%
group_by(File_num,Item_No) %>%
mutate(IR_EV_1h = mean(IR_Plates_sd^2,na.rm=TRUE), IR_MV_1h = my.max(IR_Plates_sd^2),
IR_ER_1h = mean(IR_Plates_range,na.rm=TRUE), IR_MR_1h = my.max(IR_Plates_range),
IR_VE_1h = var(IR_Plates_mean,na.rm=TRUE), IR_VM_1h =var(IR_Plates_max,na.rm=TRUE) ) %>%
mutate(PI_EV_1h = mean(PI_Plates_sd^2,na.rm=TRUE), PI_MV_1h = my.max(PI_Plates_sd^2),
PI_ER_1h = mean(PI_Plates_range,na.rm=TRUE), PI_MR_1h = my.max(PI_Plates_range),
PI_VE_1h = var(PI_Plates_mean,na.rm=TRUE), PI_VM_1h =var(PI_Plates_max,na.rm=TRUE) ) %>%
mutate(IR_mean_1h = mean(IR_Plates_mean,na.rm=TRUE),PI_mean_1h = mean(PI_Plates_mean,na.rm=TRUE),
IR_max_1h = my.max(IR_Plates_max),PI_max_1h = my.max(PI_Plates_max)) %>%
select(c(key,'IR_EV_1h', 'IR_MV_1h' ,'IR_ER_1h' , 'IR_MR_1h' ,'IR_VE_1h' , 'IR_VM_1h' ,
'PI_EV_1h', 'PI_MV_1h' ,'PI_ER_1h', 'PI_MR_1h' ,'PI_VE_1h' , 'PI_VM_1h' ,
'IR_mean_1h' ,'PI_mean_1h','IR_max_1h' ,'PI_max_1h')) %>%
distinct()%>%
ungroup
tmp_3h <- summary %>%
select(c(key,'Time','before_h','IR_Plates_mean','IR_Plates_max','IR_Plates_sd','IR_Plates_range',
'PI_Plates_mean','PI_Plates_max','PI_Plates_sd','PI_Plates_range')) %>%
filter(before_h=="3h"| before_h=="1h") %>%
group_by(File_num,Item_No) %>%
mutate(IR_EV_3h = mean(IR_Plates_sd^2,na.rm=TRUE), IR_MV_3h = my.max(IR_Plates_sd^2),
IR_ER_3h = mean(IR_Plates_range,na.rm=TRUE), IR_MR_3h = my.max(IR_Plates_range),
IR_VE_3h = var(IR_Plates_mean,na.rm=TRUE), IR_VM_3h =var(IR_Plates_max,na.rm=TRUE) ) %>%
mutate(PI_EV_3h = mean(PI_Plates_sd^2,na.rm=TRUE), PI_MV_3h = my.max(PI_Plates_sd^2),
PI_ER_3h = mean(PI_Plates_range,na.rm=TRUE), PI_MR_3h = my.max(PI_Plates_range),
PI_VE_3h = var(PI_Plates_mean,na.rm=TRUE), PI_VM_3h =var(PI_Plates_max,na.rm=TRUE) ) %>%
mutate(IR_mean_3h = mean(IR_Plates_mean,na.rm=TRUE),PI_mean_3h = mean(PI_Plates_mean,na.rm=TRUE),
IR_max_3h = my.max(IR_Plates_max),PI_max_3h = my.max(PI_Plates_max)) %>%
select(c(key,'IR_EV_3h', 'IR_MV_3h' ,'IR_ER_3h' , 'IR_MR_3h' ,'IR_VE_3h' , 'IR_VM_3h' ,
'PI_EV_3h', 'PI_MV_3h' ,'PI_ER_3h', 'PI_MR_3h' ,'PI_VE_3h' , 'PI_VM_3h' ,
'IR_mean_3h' ,'PI_mean_3h','IR_max_3h' ,'PI_max_3h')) %>%
distinct()%>%
ungroup
tmp_6h <- summary %>%
select(c(key,'Time','before_h','IR_Plates_mean','IR_Plates_max','IR_Plates_sd','IR_Plates_range',
'PI_Plates_mean','PI_Plates_max','PI_Plates_sd','PI_Plates_range')) %>%
filter(before_h=="6h"| before_h=="3h"| before_h=="1h") %>%
group_by(File_num,Item_No) %>%
mutate(IR_EV_6h = mean(IR_Plates_sd^2,na.rm=TRUE), IR_MV_6h = my.max(IR_Plates_sd^2),
IR_ER_6h = mean(IR_Plates_range,na.rm=TRUE), IR_MR_6h = my.max(IR_Plates_range),
IR_VE_6h = var(IR_Plates_mean,na.rm=TRUE), IR_VM_6h =var(IR_Plates_max,na.rm=TRUE) ) %>%
mutate(PI_EV_6h = mean(PI_Plates_sd^2,na.rm=TRUE), PI_MV_6h = my.max(PI_Plates_sd^2),
PI_ER_6h = mean(PI_Plates_range,na.rm=TRUE), PI_MR_6h = my.max(PI_Plates_range),
PI_VE_6h = var(PI_Plates_mean,na.rm=TRUE), PI_VM_6h =var(PI_Plates_max,na.rm=TRUE) ) %>%
mutate(IR_mean_6h = mean(IR_Plates_mean,na.rm=TRUE),PI_mean_6h = mean(PI_Plates_mean,na.rm=TRUE),
IR_max_6h = my.max(IR_Plates_max),PI_max_6h = my.max(PI_Plates_max)) %>%
select(c(key,'IR_EV_6h', 'IR_MV_6h' ,'IR_ER_6h' , 'IR_MR_6h' ,'IR_VE_6h' , 'IR_VM_6h' ,
'PI_EV_6h', 'PI_MV_6h' ,'PI_ER_6h', 'PI_MR_6h' ,'PI_VE_6h' , 'PI_VM_6h' ,
'IR_mean_6h' ,'PI_mean_6h','IR_max_6h' ,'PI_max_6h')) %>%
distinct()%>%
ungroup
tmp_12h <- summary %>%
select(c(key,'Time','before_h','IR_Plates_mean','IR_Plates_max','IR_Plates_sd','IR_Plates_range',
'PI_Plates_mean','PI_Plates_max','PI_Plates_sd','PI_Plates_range')) %>%
filter(before_h=="12h"| before_h=="6h"| before_h=="3h"| before_h=="1h") %>%
group_by(File_num,Item_No) %>%
mutate(IR_EV_12h = mean(IR_Plates_sd^2,na.rm=TRUE), IR_MV_12h = my.max(IR_Plates_sd^2),
IR_ER_12h = mean(IR_Plates_range,na.rm=TRUE), IR_MR_12h = my.max(IR_Plates_range),
IR_VE_12h = var(IR_Plates_mean,na.rm=TRUE), IR_VM_12h =var(IR_Plates_max,na.rm=TRUE) ) %>%
mutate(PI_EV_12h = mean(PI_Plates_sd^2,na.rm=TRUE), PI_MV_12h = my.max(PI_Plates_sd^2),
PI_ER_12h = mean(PI_Plates_range,na.rm=TRUE), PI_MR_12h = my.max(PI_Plates_range),
PI_VE_12h = var(PI_Plates_mean,na.rm=TRUE), PI_VM_12h =var(PI_Plates_max,na.rm=TRUE) ) %>%
mutate(IR_mean_12h = mean(IR_Plates_mean,na.rm=TRUE),PI_mean_12h = mean(PI_Plates_mean,na.rm=TRUE),
IR_max_12h = my.max(IR_Plates_max),PI_max_12h = my.max(PI_Plates_max)) %>%
select(c(key,'IR_EV_12h', 'IR_MV_12h' ,'IR_ER_12h' , 'IR_MR_12h' ,'IR_VE_12h' , 'IR_VM_12h' ,
'PI_EV_12h', 'PI_MV_12h' ,'PI_ER_12h', 'PI_MR_12h' ,'PI_VE_12h' , 'PI_VM_12h' ,
'IR_mean_12h' ,'PI_mean_12h','IR_max_12h' ,'PI_max_12h')) %>%
distinct()%>%
ungroup
tmp_24h <- summary %>%
select(c(key,'Time','before_h','IR_Plates_mean','IR_Plates_max','IR_Plates_sd','IR_Plates_range',
'PI_Plates_mean','PI_Plates_max','PI_Plates_sd','PI_Plates_range')) %>%
filter(before_h=="24h"| before_h=="12h"| before_h=="6h"| before_h=="3h"| before_h=="1h") %>%
group_by(File_num,Item_No) %>%
mutate(IR_EV_24h = mean(IR_Plates_sd^2,na.rm=TRUE), IR_MV_24h = my.max(IR_Plates_sd^2),
IR_ER_24h = mean(IR_Plates_range,na.rm=TRUE), IR_MR_24h = my.max(IR_Plates_range),
IR_VE_24h = var(IR_Plates_mean,na.rm=TRUE), IR_VM_24h =var(IR_Plates_max,na.rm=TRUE) ) %>%
mutate(PI_EV_24h = mean(PI_Plates_sd^2,na.rm=TRUE), PI_MV_24h = my.max(PI_Plates_sd^2),
PI_ER_24h = mean(PI_Plates_range,na.rm=TRUE), PI_MR_24h = my.max(PI_Plates_range),
PI_VE_24h = var(PI_Plates_mean,na.rm=TRUE), PI_VM_24h =var(PI_Plates_max,na.rm=TRUE) ) %>%
mutate(IR_mean_24h = mean(IR_Plates_mean,na.rm=TRUE),PI_mean_24h = mean(PI_Plates_mean,na.rm=TRUE),
IR_max_24h = my.max(IR_Plates_max),PI_max_24h = my.max(PI_Plates_max)) %>%
select(c(key,'IR_EV_24h', 'IR_MV_24h' ,'IR_ER_24h' , 'IR_MR_24h' ,'IR_VE_24h' , 'IR_VM_24h' ,
'PI_EV_24h', 'PI_MV_24h' ,'PI_ER_24h', 'PI_MR_24h' ,'PI_VE_24h' , 'PI_VM_24h' ,
'IR_mean_24h' ,'PI_mean_24h','IR_max_24h' ,'PI_max_24h')) %>%
distinct()%>%
ungroup
tmp_48h <- summary %>%
select(c(key,'Time','before_h','IR_Plates_mean','IR_Plates_max','IR_Plates_sd','IR_Plates_range',
'PI_Plates_mean','PI_Plates_max','PI_Plates_sd','PI_Plates_range')) %>%
group_by(File_num,Item_No) %>%
mutate(IR_EV_48h = mean(IR_Plates_sd^2,na.rm=TRUE), IR_MV_48h = my.max(IR_Plates_sd^2),
IR_ER_48h = mean(IR_Plates_range,na.rm=TRUE), IR_MR_48h = my.max(IR_Plates_range),
IR_VE_48h = var(IR_Plates_mean,na.rm=TRUE), IR_VM_48h =var(IR_Plates_max,na.rm=TRUE) ) %>%
mutate(PI_EV_48h = mean(PI_Plates_sd^2,na.rm=TRUE), PI_MV_48h = my.max(PI_Plates_sd^2),
PI_ER_48h = mean(PI_Plates_range,na.rm=TRUE), PI_MR_48h = my.max(PI_Plates_range),
PI_VE_48h = var(PI_Plates_mean,na.rm=TRUE), PI_VM_48h =var(PI_Plates_max,na.rm=TRUE) ) %>%
mutate(IR_mean_48h = mean(IR_Plates_mean,na.rm=TRUE),PI_mean_48h = mean(PI_Plates_mean,na.rm=TRUE),
IR_max_48h = my.max(IR_Plates_max),PI_max_48h = my.max(PI_Plates_max)) %>%
select(c(key,'IR_EV_48h', 'IR_MV_48h' ,'IR_ER_48h' , 'IR_MR_48h' ,'IR_VE_48h' , 'IR_VM_48h' ,
'PI_EV_48h', 'PI_MV_48h' ,'PI_ER_48h', 'PI_MR_48h' ,'PI_VE_48h' , 'PI_VM_48h' ,
'IR_mean_48h' ,'PI_mean_48h','IR_max_48h' ,'PI_max_48h')) %>%
distinct()%>%
ungroup
summary_tree <- tmp_1h %>%
full_join(tmp_3h, by = key) %>%
full_join(tmp_6h, by = key) %>%
full_join(tmp_12h, by = key) %>%
full_join(tmp_24h, by = key) %>%
full_join(tmp_48h, by = key) %>%
arrange(File_num,Item_No)
summary_tree$y <- as.factor(summary_tree$y)
# 결측 제거 2,634 -> 2,631
NArow <- which(is.na(summary_tree),arr.ind=TRUE)
summary_tree <- summary_tree[-NArow[,1],]
smrs <- colnames(summary_tree)[5:100]
key <- colnames(summary_tree)[1:4]
EV <- colnames(summary_tree)[grep("EV",colnames(summary_tree))]
MV <- colnames(summary_tree)[grep("MV",colnames(summary_tree))]
ER <- colnames(summary_tree)[grep("ER",colnames(summary_tree))]
MR <- colnames(summary_tree)[grep("MR",colnames(summary_tree))]
VE <- colnames(summary_tree)[grep("VE",colnames(summary_tree))]
VM <- colnames(summary_tree)[grep("VM",colnames(summary_tree))]
mean <- colnames(summary_tree[grep("mean",colnames(summary_tree))])
max <- colnames(summary_tree[grep("max",colnames(summary_tree))])
set.seed(210609)
alldata <- summary_tree[,-c(1:3)]
alldata <- summary_tree[,-c(1:3)]
tree.all <- rpart(y ~ ., data=alldata,method="class")
rpart.plot(tree.all)
pred.all <- predict(tree.all,newdata=alldata, type = "class")
confusionMatrix(pred.all, alldata$y)
if(!require(caret)) install.packages('caret'); require(caret)
confusionMatrix(pred.all, alldata$y)
subdata1 <- summary_tree[,c('y',EV,VE,mean)]
tree.sub1 <- rpart(y ~ ., data=subdata1)
rpart.plot(tree.sub1)
pred.sub1 <- predict(tree.sub1,newdata=alldata, type = "class")
confusionMatrix(pred.sub1, alldata$y)
subdata5 <- summary_tree[,c('y',EV,VE,mean,max)]
subdata5 <- summary_tree[,c('y',EV,VE,mean,max)]
tree.sub5 <- rpart(y ~ ., data=subdata5)
rpart.plot(tree.sub5)
pred.sub5 <- predict(tree.sub5,newdata=alldata, type = "class")
confusionMatrix(pred.sub5, alldata$y)
rm(list=ls())
#packages
if(!require(dplyr)) install.packages('dplyr'); require(dplyr)
if(!require(tidyr)) install.packages('tidyr'); require(tidyr)
if(!require(tidyverse)) install.packages('tidyverse'); require(tidyverse)
if(!require(caret)) install.packages('caret'); require(caret)
if(!require(rpart)) install.packages('rpart'); require(rpart)
if(!require(rpart.plot)) install.packages('rpart.plot'); require(rpart.plot)
#directory - R_code
print(dirname(rstudioapi::getActiveDocumentContext()$path))
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
load("../0.Data/N3_RData/summary_tree2_data.Rdata")
ranges <- grep("range",colnames(summary_tree2))
min <- grep("min",colnames(summary_tree2))
max <- grep("max",colnames(summary_tree2))
med <- grep("med",colnames(summary_tree2))
mean <- colnames(summary_tree2)[grep("mean",colnames(summary_tree2) )]
sd <- colnames(summary_tree2)[grep("sd",colnames(summary_tree2) )]
alldata <- summary_tree2[,-c(1:3,5,min,max)]
View(alldata)
alldata <- summary_tree2[,-c(1:3,5,min,max)]
tree2.all <- rpart(y ~ ., data=alldata)
rpart.plot(tree2.all)
alldata <- summary_tree2[,-c(1:3,5,min,max)]
tree2.all <- rpart(y ~ ., data=alldata)
rpart.plot(tree2.all)
pred2.all <- predict(tree2.all,newdata=alldata, type = "class")
confusionMatrix(pred2.all, alldata$y)
subdata <- alldata[,1:41]
tree2.sub <- rpart(y ~ ., data=subdata)
rpart.plot(tree2.sub)
pred2.sub <- predict(tree2.sub,newdata=subdata, type = "class")
confusionMatrix(pred2.sub, subdata$y)
pred2.sub <- predict(tree2.sub,newdata=alldata, type = "class")
confusionMatrix(pred2.sub, subdata$y)
rm(list=ls())
# 00. environment -------------------------------------------------------------
#packages
if(!require(dplyr)) install.packages('dplyr'); require(dplyr)
if(!require(tidyr)) install.packages('tidyr'); require(tidyr)
if(!require(tidyverse)) install.packages('tidyverse'); require(tidyverse)
if(!require(rpart)) install.packages('rpart'); require(rpart)
if(!require(rpart.plot)) install.packages('rpart.plot'); require(rpart.plot)
if(!require(caret)) install.packages('caret'); require(caret)
#directory - R_code
print(dirname(rstudioapi::getActiveDocumentContext()$path))
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
load("../0.Data/N3_RData/summary_tree_data.Rdata")
smrs <- colnames(summary_tree)[5:100]
key <- colnames(summary_tree)[1:4]
EV <- colnames(summary_tree)[grep("EV",colnames(summary_tree))]
MV <- colnames(summary_tree)[grep("MV",colnames(summary_tree))]
ER <- colnames(summary_tree)[grep("ER",colnames(summary_tree))]
MR <- colnames(summary_tree)[grep("MR",colnames(summary_tree))]
VE <- colnames(summary_tree)[grep("VE",colnames(summary_tree))]
VM <- colnames(summary_tree)[grep("VM",colnames(summary_tree))]
mean <- colnames(summary_tree[grep("mean",colnames(summary_tree))])
max <- colnames(summary_tree[grep("max",colnames(summary_tree))])
set.seed(210609)
alldata <- summary_tree[,-c(1:3)]
tree.all <- rpart(y ~ ., data=alldata,method="class")
rpart.plot(tree.all)
pred.all <- predict(tree.all,newdata=alldata, type = "class")
confusionMatrix(pred.all, alldata$y)
pred.all
subdata1 <- summary_tree[,c('y',EV,VE,mean)]
tree.sub1 <- rpart(y ~ ., data=subdata1)
rpart.plot(tree.sub1)
pred.sub1 <- predict(tree.sub1,newdata=alldata, type = "class")
confusionMatrix(pred.sub1, alldata$y)
subdata5 <- summary_tree[,c('y',EV,VE,mean,max)]
tree.sub5 <- rpart(y ~ ., data=subdata5)
rpart.plot(tree.sub5)
pred.sub5 <- predict(tree.sub5,newdata=alldata, type = "class")
confusionMatrix(pred.sub5, alldata$y)
summary_tree$pred1 <- pred.sub1
summary_tree$pred2 <- pred.all
View(summary_tree)
rm(list=ls())
# 00. environment -------------------------------------------------------------
#packages
if(!require(dplyr)) install.packages('dplyr'); require(dplyr)
if(!require(tidyr)) install.packages('tidyr'); require(tidyr)
if(!require(tidyverse)) install.packages('tidyverse'); require(tidyverse)
if(!require(rpart)) install.packages('rpart'); require(rpart)
if(!require(rpart.plot)) install.packages('rpart.plot'); require(rpart.plot)
if(!require(caret)) install.packages('caret'); require(caret)
#directory - R_code
print(dirname(rstudioapi::getActiveDocumentContext()$path))
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
load("../0.Data/N3_RData/summary_tree_data.Rdata")
smrs <- colnames(summary_tree)[5:100]
key <- colnames(summary_tree)[1:4]
EV <- colnames(summary_tree)[grep("EV",colnames(summary_tree))]
MV <- colnames(summary_tree)[grep("MV",colnames(summary_tree))]
ER <- colnames(summary_tree)[grep("ER",colnames(summary_tree))]
MR <- colnames(summary_tree)[grep("MR",colnames(summary_tree))]
VE <- colnames(summary_tree)[grep("VE",colnames(summary_tree))]
VM <- colnames(summary_tree)[grep("VM",colnames(summary_tree))]
mean <- colnames(summary_tree[grep("mean",colnames(summary_tree))])
max <- colnames(summary_tree[grep("max",colnames(summary_tree))])
set.seed(210609)
alldata <- summary_tree[,-c(1:3)]
tree.all <- rpart(y ~ ., data=alldata,method="class")
rpart.plot(tree.all)
pred.all <- predict(tree.all,newdata=alldata, type = "class")
confusionMatrix(pred.all, alldata$y)
subdata1 <- summary_tree[,c('y',EV,VE,mean)]
tree.sub1 <- rpart(y ~ ., data=subdata1)
rpart.plot(tree.sub1)
pred.sub1 <- predict(tree.sub1,newdata=alldata, type = "class")
confusionMatrix(pred.sub1, alldata$y)
summary_tree$pred1 <- pred.sub1
summary_tree$pred2 <- pred.all
View(summary_tree)
tree_yn <- summary_tree %>%
select(c(key,'pred1','pred2'))
View(tree_yn)
table(tree_yn$y,tree_yn$pred1)
table(tree_yn$y,tree_yn$pred2)
save(tree_yn,file="../0.Data/N3_RData/tree_yn.Rdata")
View(tree_yn)
rm(list=ls())
rm(list=ls())
# environment -------------------------------------------------------------
#packages
if(!require(dplyr)) install.packages('dplyr'); require(dplyr)
if(!require(tidyr)) install.packages('tidyr'); require(tidyr)
if(!require(tidyverse)) install.packages('tidyverse'); require(tidyverse)
if(!require(ggplot2)) install.packages('ggplot2'); require(ggplot2)
if(!require(pROC)) install.packages('pROC'); require(pROC)
#directory - R_code
print(dirname(rstudioapi::getActiveDocumentContext()$path))
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
load(file="../0.Data/N3_RData/prep02_data.Rdata")
load(file="../0.Data/N3_RData/tree_yn.Rdata")
View(prep02_df)
tmp <- prep02_df %>%
left_join(tree_yn, by = c('File_num','Item_No','y_date','y'))
View(tmp)
table(tree_yn$y,tree_yn$pred1)
table(tree_yn$y,tree_yn$pred2)
alpha1 <- tmp %>%
filter(y==1 & pred1==0)
224718/78
beta1 <- tmp %>%
filter(y==0 & pred1 ==1)
20167/11
20167/7
True1 <- tmp %>%
filter(y==1 & pred1==1)
31691/11
View(beta1)
aa <- unique(alpha1$File_num)
aa
aa <- unique(beta1$File_num)
aa
View(beta1)
alpha1 <- tree_yn %>%
filter(y==1 $ pred==0)
alpha1 <- tree_yn %>%
filter(y==1 $ pred1==0 )
alpha1 <- tree_yn %>%
filter(y==1 & pred1==0 )
View(alpha1)
alpha1 <- tree_yn %>%
filter(y==1 & pred1==0 )
beta1 <- tree_yn %>%
filter(y==0 & pred1==1)
True1 <- tree_yn %>%
filter(y==1 & pred1==1)
View(alpha1)
View(beta1)
View(True1)
table(tree_yn$y,tree_yn$pred1)
table(tree_yn$y,tree_yn$pred2)
alpha2 <- tree_yn %>%
filter(y==1 & pred2==0 )
beta2 <- tree_yn %>%
filter(y==0 & pred2==1)
True2 <- tree_yn %>%
filter(y==1 & pred2==1)
View(beta2)
View(True2)
View(True2)
View(alpha1)
rm(list=ls())
# 00. environment -------------------------------------------------------------
#packages
if(!require(dplyr)) install.packages('dplyr'); require(dplyr)
if(!require(tidyr)) install.packages('tidyr'); require(tidyr)
if(!require(tidyverse)) install.packages('tidyverse'); require(tidyverse)
if(!require(glmnet)) install.packages('glmnet'); require(glmnet)
if(!require(caret)) install.packages('caret'); require(caret)
#directory - R_code
print(dirname(rstudioapi::getActiveDocumentContext()$path))
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
load("../0.Data/N3_RData/summary_2day_data.Rdata")
View(summary_2day)
data <- summary_2day[,-c(1:3)]
View(data)
data <- summary_2day[,-c(1:3)]
tree.2day <- rpart(y ~ ., data=data,method="class")
rpart.plot(tree.day2)
data <- summary_2day[,-c(1:3)]
tree.2day <- rpart(y ~ ., data=data,method="class")
rpart.plot(tree.2day)
pred.2day <- predict(tree.2day,newdata=data, type = "class")
confusionMatrix(pred.2day, alldata$y)
data <- summary_2day[,-c(1:3)]
tree.2day <- rpart(y ~ ., data=data,method="class")
rpart.plot(tree.2day)
pred.2day <- predict(tree.2day,newdata=data, type = "class")
confusionMatrix(pred.2day, data$y)
View(summary_2day)
View(data)
data <- summary_2day[,c(4:26)]
View(data)
View(summary_2day)
data <- summary_2day[,c(4:29)]
View(data)
data <- summary_2day[,c(4:29)]
View(data)
tree.2day <- rpart(y ~ ., data=data,method="class")
rpart.plot(tree.2day)
pred.2day <- predict(tree.2day,newdata=data, type = "class")
confusionMatrix(pred.2day, data$y)
data <- summary_2day[,c(4:34)]
tree.2day <- rpart(y ~ ., data=data,method="class")
rpart.plot(tree.2day)
pred.2day <- predict(tree.2day,newdata=data, type = "class")
confusionMatrix(pred.2day, data$y)
data <- summary_2day[,c(4:29)]
tree.2day <- rpart(y ~ ., data=data,method="class")
rpart.plot(tree.2day)
pred.2day <- predict(tree.2day,newdata=data, type = "class")
confusionMatrix(pred.2day, data$y)
rm(list=ls())
# 00. environment -------------------------------------------------------------
#packages
if(!require(dplyr)) install.packages('dplyr'); require(dplyr)
if(!require(tidyr)) install.packages('tidyr'); require(tidyr)
if(!require(tidyverse)) install.packages('tidyverse'); require(tidyverse)
if(!require(glmnet)) install.packages('glmnet'); require(glmnet)
#directory - R_code
print(dirname(rstudioapi::getActiveDocumentContext()$path))
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
load("../0.Data/N3_RData/summary_plates_data.Rdata")
View(summary_plates)
data <- summary_plates[,c(4:77)]
View(data)
data <- summary_plates[,c(4,6:77)]
View(data)
tree.plates <- rpart(y ~ ., data=data,method="class")
rpart.plot(tree.plates)
pred.plates <- predict(tree.plates,newdata=data, type = "class")
confusionMatrix(pred.plates, data$y)
1905+315
31500/2220
31500/364
tree_yn <- summary_2day %>%
select(c('File_num','Item_No','y_date','y'))
rm(list=ls())
# 00. environment -------------------------------------------------------------
#packages
if(!require(dplyr)) install.packages('dplyr'); require(dplyr)
if(!require(tidyr)) install.packages('tidyr'); require(tidyr)
if(!require(tidyverse)) install.packages('tidyverse'); require(tidyverse)
if(!require(glmnet)) install.packages('glmnet'); require(glmnet)
if(!require(caret)) install.packages('caret'); require(caret)
#directory - R_code
print(dirname(rstudioapi::getActiveDocumentContext()$path))
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
load("../0.Data/N3_RData/summary_2day_data.Rdata")
data <- summary_2day[,c(4:29)]
tree.2day <- rpart(y ~ ., data=data,method="class")
rpart.plot(tree.2day)
pred.2day <- predict(tree.2day,newdata=data, type = "class")
confusionMatrix(pred.2day, data$y)
tree_yn <- summary_2day %>%
select(c('File_num','Item_No','y_date','y'))
tree_yn$tree_pred <- pred.2day
View(summary_2day)
View(data)
View(tree.2day)
View(tree_yn)
View(data)
data <- summary_2day[,c(4:29)]
tree.2day <- rpart(y ~ ., data=data,method="class")
rpart.plot(tree.2day)
pred.2day <- predict(tree.2day,newdata=data, type = "class")
confusionMatrix(pred.2day, data$y)
tree_yn <- summary_2day %>%
select(c('File_num','Item_No','y_date','y'))
tree_yn$tree_pred <- pred.2day
alpha <- tree_yn %>%
filter(y==1 & pred==0 )
beta <- tree_yn %>%
filter(y==0 & pred==1)
True <- tree_yn %>%
filter(y==1 & pred==1)
data <- summary_2day[,c(4:29)]
tree.2day <- rpart(y ~ ., data=data,method="class")
rpart.plot(tree.2day)
pred.2day <- predict(tree.2day,newdata=data, type = "class")
confusionMatrix(pred.2day, data$y)
tree_yn <- summary_2day %>%
select(c('File_num','Item_No','y_date','y'))
tree_yn$pred <- pred.2day
alpha <- tree_yn %>%
filter(y==1 & pred==0 )
beta <- tree_yn %>%
filter(y==0 & pred==1)
True <- tree_yn %>%
filter(y==1 & pred==1)
View(alpha)
View(beta)
View(True)
data <- summary_plates[,c(4,6:77)]
load("../0.Data/N3_RData/summary_plates_data.Rdata")
data <- summary_plates[,c(4,6:77)]
tree.plates <- rpart(y ~ ., data=data,method="class")
rpart.plot(tree.plates)
pred.plates <- predict(tree.plates,newdata=data, type = "class")
confusionMatrix(pred.plates, data$y)
data <- summary_plates[,c(4,6:65)]
tree.plates <- rpart(y ~ ., data=data,method="class")
rpart.plot(tree.plates)
pred.plates <- predict(tree.plates,newdata=data, type = "class")
confusionMatrix(pred.plates, data$y)
data <- summary_plates[,c(4,6:65)]
View(data)
tree.plates <- rpart(y ~ ., data=data,method="class")
rpart.plot(tree.plates)
pred.plates <- predict(tree.plates,newdata=data, type = "class")
confusionMatrix(pred.plates, data$y)
rm(list=ls())
# 00. environment -------------------------------------------------------------
#packages
if(!require(dplyr)) install.packages('dplyr'); require(dplyr)
if(!require(tidyr)) install.packages('tidyr'); require(tidyr)
if(!require(tidyverse)) install.packages('tidyverse'); require(tidyverse)
if(!require(rpart)) install.packages('rpart'); require(rpart)
if(!require(rpart.plot)) install.packages('rpart.plot'); require(rpart.plot)
if(!require(caret)) install.packages('caret'); require(caret)
#directory - R_code
print(dirname(rstudioapi::getActiveDocumentContext()$path))
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
load("../0.Data/N3_RData/summary_tree_data.Rdata")
smrs <- colnames(summary_tree)[5:100]
key <- colnames(summary_tree)[1:4]
EV <- colnames(summary_tree)[grep("EV",colnames(summary_tree))]
MV <- colnames(summary_tree)[grep("MV",colnames(summary_tree))]
ER <- colnames(summary_tree)[grep("ER",colnames(summary_tree))]
MR <- colnames(summary_tree)[grep("MR",colnames(summary_tree))]
VE <- colnames(summary_tree)[grep("VE",colnames(summary_tree))]
VM <- colnames(summary_tree)[grep("VM",colnames(summary_tree))]
mean <- colnames(summary_tree[grep("mean",colnames(summary_tree))])
max <- colnames(summary_tree[grep("max",colnames(summary_tree))])
View(summary_tree)
onedata <- summary_tree[,c(4:84)]
View(onedata)
tree.one <- rpart(y ~ ., data=onedata,method="class")
rpart.plot(tree.one)
pred.one <- predict(tree.one,newdata=onedata, type = "class")
confusionMatrix(pred.one, onedata$y)
subdata1 <- summary_tree[,c('y',EV,VE,mean)]
